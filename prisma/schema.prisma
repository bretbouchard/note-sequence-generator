generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Sequence {
  id            String   @id @default(cuid())
  key           String
  scaleDegrees  String  // Store as JSON string
  durations     String  // Store as JSON string
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model ChordType {
  id        String   @id @default(uuid())
  name      String   // e.g., "Major 7th"
  symbol    String   // e.g., "maj7"
  intervals String   // Store as comma-separated string: "0,4,7,11"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChordProgression {
  id        String               @id @default(uuid())
  name      String
  chords    ChordInProgression[]
  isPreset  Boolean             @default(false)
  category  String?
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
}

model ChordInProgression {
  id              String           @id @default(uuid())
  progression     ChordProgression @relation(fields: [progressionId], references: [id])
  progressionId   String
  degree          String           // "Imaj7"
  scaleDegree     String           // "1"
  chordType       String           // "maj7"
  duration        Float            // 4.0
  position        Float            // 0.0
  order           Int              // For maintaining chord order
  chordNotesDegree String          // Store as comma-separated string: "1,3,5,7"
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@index([progressionId])
}

model ChordTemplate {
  id          String   @id @default(cuid())
  name        String
  category    String   // e.g., "basic", "jazz", "latin"
  pattern     String   // Store as JSON string
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProgressionTemplate {
  id          String   @id @default(cuid())
  name        String
  description String?
  pattern     String   // Store as JSON string of ProgressionTemplateRule
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model NoteTemplate {
  id           String   @id @default(uuid())
  name         String
  scaleDegrees String   // Store as comma-separated string: "1,2,3,4,5"
  weights      String   // Store as comma-separated string: "1,1,1,1,1"
  repetition   String   // Store as string: "{"startBar":0,"duration":4}"
  direction    String   @default("forward")
  behavior     String   @default("continuous")
  useChordTones Boolean @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model RhythmTemplate {
  id               String   @id @default(uuid())
  name             String
  durations        String   // Store as comma-separated string: "1,1,1,1"
  templateDuration Float
  repetition       String   // Store as string: "{"startBar":0,"duration":4}"
  direction        String   @default("forward")
  behavior         String   @default("continuous")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
} 